// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0
// source: qnq_rpc.proto

package QNQ

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IpAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip         string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	LastJumpIp string `protobuf:"bytes,2,opt,name=lastJumpIp,proto3" json:"lastJumpIp,omitempty"`
}

func (x *IpAgent) Reset() {
	*x = IpAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpAgent) ProtoMessage() {}

func (x *IpAgent) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpAgent.ProtoReflect.Descriptor instead.
func (*IpAgent) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *IpAgent) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpAgent) GetLastJumpIp() string {
	if x != nil {
		return x.LastJumpIp
	}
	return ""
}

type LocalSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	Source     string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Target     string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	Level      string `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *LocalSyncRequest) Reset() {
	*x = LocalSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalSyncRequest) ProtoMessage() {}

func (x *LocalSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalSyncRequest.ProtoReflect.Descriptor instead.
func (*LocalSyncRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *LocalSyncRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *LocalSyncRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LocalSyncRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *LocalSyncRequest) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId  uint32 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Result) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RemoteTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	Ip         string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port       uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *RemoteTargetRequest) Reset() {
	*x = RemoteTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteTargetRequest) ProtoMessage() {}

func (x *RemoteTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteTargetRequest.ProtoReflect.Descriptor instead.
func (*RemoteTargetRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *RemoteTargetRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *RemoteTargetRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RemoteTargetRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetRemoteFileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetRemoteFileInfoRequest) Reset() {
	*x = GetRemoteFileInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemoteFileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteFileInfoRequest) ProtoMessage() {}

func (x *GetRemoteFileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteFileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRemoteFileInfoRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetRemoteFileInfoRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *GetRemoteFileInfoRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RemoteSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port   string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Target string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *RemoteSyncRequest) Reset() {
	*x = RemoteSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSyncRequest) ProtoMessage() {}

func (x *RemoteSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSyncRequest.ProtoReflect.Descriptor instead.
func (*RemoteSyncRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *RemoteSyncRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RemoteSyncRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *RemoteSyncRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RemoteSyncRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type FileInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result                    `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Len       int64                      `protobuf:"varint,2,opt,name=len,proto3" json:"len,omitempty"`
	FileInfos []*FileInfoResult_FileInfo `protobuf:"bytes,3,rep,name=fileInfos,proto3" json:"fileInfos,omitempty"`
}

func (x *FileInfoResult) Reset() {
	*x = FileInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResult) ProtoMessage() {}

func (x *FileInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResult.ProtoReflect.Descriptor instead.
func (*FileInfoResult) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *FileInfoResult) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *FileInfoResult) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *FileInfoResult) GetFileInfos() []*FileInfoResult_FileInfo {
	if x != nil {
		return x.FileInfos
	}
	return nil
}

type GetTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	TaskId     uint32 `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *GetTaskRequest) Reset() {
	*x = GetTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRequest) ProtoMessage() {}

func (x *GetTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetTaskRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *GetTaskRequest) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type TaskInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Status    uint32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress  float64 `protobuf:"fixed64,3,opt,name=progress,proto3" json:"progress,omitempty"`
	TotalSize uint64  `protobuf:"varint,4,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
}

func (x *TaskInfoResult) Reset() {
	*x = TaskInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfoResult) ProtoMessage() {}

func (x *TaskInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfoResult.ProtoReflect.Descriptor instead.
func (*TaskInfoResult) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *TaskInfoResult) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskInfoResult) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskInfoResult) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *TaskInfoResult) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetSysInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
}

func (x *GetSysInfoRequest) Reset() {
	*x = GetSysInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysInfoRequest) ProtoMessage() {}

func (x *GetSysInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSysInfoRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetSysInfoRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

type SysInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         *Result                       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	QnqVersion     string                        `protobuf:"bytes,2,opt,name=qnqVersion,proto3" json:"qnqVersion,omitempty"`
	FuncBitMap     int64                         `protobuf:"varint,3,opt,name=funcBitMap,proto3" json:"funcBitMap,omitempty"`
	HostOs         string                        `protobuf:"bytes,4,opt,name=hostOs,proto3" json:"hostOs,omitempty"`
	HostArch       string                        `protobuf:"bytes,5,opt,name=hostArch,proto3" json:"hostArch,omitempty"`
	PartitionStats []*SysInfoResultPartitionStat `protobuf:"bytes,6,rep,name=partitionStats,proto3" json:"partitionStats,omitempty"`
}

func (x *SysInfoResult) Reset() {
	*x = SysInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysInfoResult) ProtoMessage() {}

func (x *SysInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysInfoResult.ProtoReflect.Descriptor instead.
func (*SysInfoResult) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *SysInfoResult) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SysInfoResult) GetQnqVersion() string {
	if x != nil {
		return x.QnqVersion
	}
	return ""
}

func (x *SysInfoResult) GetFuncBitMap() int64 {
	if x != nil {
		return x.FuncBitMap
	}
	return 0
}

func (x *SysInfoResult) GetHostOs() string {
	if x != nil {
		return x.HostOs
	}
	return ""
}

func (x *SysInfoResult) GetHostArch() string {
	if x != nil {
		return x.HostArch
	}
	return ""
}

func (x *SysInfoResult) GetPartitionStats() []*SysInfoResultPartitionStat {
	if x != nil {
		return x.PartitionStats
	}
	return nil
}

type GetPerfProbeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAddr      string `protobuf:"bytes,1,opt,name=targetAddr,proto3" json:"targetAddr,omitempty"`
	DiskAnchorPoint string `protobuf:"bytes,2,opt,name=diskAnchorPoint,proto3" json:"diskAnchorPoint,omitempty"`
	GetNetSpeed     bool   `protobuf:"varint,3,opt,name=getNetSpeed,proto3" json:"getNetSpeed,omitempty"`
}

func (x *GetPerfProbeRequest) Reset() {
	*x = GetPerfProbeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerfProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerfProbeRequest) ProtoMessage() {}

func (x *GetPerfProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerfProbeRequest.ProtoReflect.Descriptor instead.
func (*GetPerfProbeRequest) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *GetPerfProbeRequest) GetTargetAddr() string {
	if x != nil {
		return x.TargetAddr
	}
	return ""
}

func (x *GetPerfProbeRequest) GetDiskAnchorPoint() string {
	if x != nil {
		return x.DiskAnchorPoint
	}
	return ""
}

func (x *GetPerfProbeRequest) GetGetNetSpeed() bool {
	if x != nil {
		return x.GetNetSpeed
	}
	return false
}

type PerfProbeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	DiskSpeed uint32  `protobuf:"varint,2,opt,name=diskSpeed,proto3" json:"diskSpeed,omitempty"`
	NetSpeed  uint32  `protobuf:"varint,3,opt,name=netSpeed,proto3" json:"netSpeed,omitempty"`
}

func (x *PerfProbeResult) Reset() {
	*x = PerfProbeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerfProbeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerfProbeResult) ProtoMessage() {}

func (x *PerfProbeResult) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerfProbeResult.ProtoReflect.Descriptor instead.
func (*PerfProbeResult) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *PerfProbeResult) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PerfProbeResult) GetDiskSpeed() uint32 {
	if x != nil {
		return x.DiskSpeed
	}
	return 0
}

func (x *PerfProbeResult) GetNetSpeed() uint32 {
	if x != nil {
		return x.NetSpeed
	}
	return 0
}

type FileInfoResult_FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsDir      bool   `protobuf:"varint,2,opt,name=isDir,proto3" json:"isDir,omitempty"`
	Size       uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Prem       uint32 `protobuf:"varint,4,opt,name=prem,proto3" json:"prem,omitempty"`
	ModifyDate string `protobuf:"bytes,5,opt,name=modifyDate,proto3" json:"modifyDate,omitempty"`
}

func (x *FileInfoResult_FileInfo) Reset() {
	*x = FileInfoResult_FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoResult_FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoResult_FileInfo) ProtoMessage() {}

func (x *FileInfoResult_FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoResult_FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfoResult_FileInfo) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{6, 0}
}

func (x *FileInfoResult_FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfoResult_FileInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileInfoResult_FileInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfoResult_FileInfo) GetPrem() uint32 {
	if x != nil {
		return x.Prem
	}
	return 0
}

func (x *FileInfoResult_FileInfo) GetModifyDate() string {
	if x != nil {
		return x.ModifyDate
	}
	return ""
}

type SysInfoResultPartitionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      string  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint  string  `protobuf:"bytes,2,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	Opts        string  `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	FsType      string  `protobuf:"bytes,4,opt,name=fsType,proto3" json:"fsType,omitempty"`
	Total       uint64  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Free        uint64  `protobuf:"varint,6,opt,name=free,proto3" json:"free,omitempty"`
	UsedPercent float64 `protobuf:"fixed64,7,opt,name=usedPercent,proto3" json:"usedPercent,omitempty"`
}

func (x *SysInfoResultPartitionStat) Reset() {
	*x = SysInfoResultPartitionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qnq_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysInfoResultPartitionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysInfoResultPartitionStat) ProtoMessage() {}

func (x *SysInfoResultPartitionStat) ProtoReflect() protoreflect.Message {
	mi := &file_qnq_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysInfoResultPartitionStat.ProtoReflect.Descriptor instead.
func (*SysInfoResultPartitionStat) Descriptor() ([]byte, []int) {
	return file_qnq_rpc_proto_rawDescGZIP(), []int{10, 0}
}

func (x *SysInfoResultPartitionStat) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *SysInfoResultPartitionStat) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *SysInfoResultPartitionStat) GetOpts() string {
	if x != nil {
		return x.Opts
	}
	return ""
}

func (x *SysInfoResultPartitionStat) GetFsType() string {
	if x != nil {
		return x.FsType
	}
	return ""
}

func (x *SysInfoResultPartitionStat) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysInfoResultPartitionStat) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *SysInfoResultPartitionStat) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

var File_qnq_rpc_proto protoreflect.FileDescriptor

var file_qnq_rpc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x71, 0x6e, 0x71, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x39, 0x0a, 0x07, 0x49, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x4a, 0x75, 0x6d, 0x70, 0x49, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x4a, 0x75, 0x6d, 0x70, 0x49, 0x70, 0x22, 0x78, 0x0a, 0x10, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x4e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x67, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x36,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x7c, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x72, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x83,
	0x01, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0xac, 0x03, 0x0a, 0x0d, 0x53, 0x79,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x71, 0x6e, 0x71, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x71, 0x6e, 0x71, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x75, 0x6e, 0x63, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x66, 0x75, 0x6e, 0x63, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x4f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x4f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x72, 0x63, 0x68,
	0x12, 0x44, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x79, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0xbf, 0x01, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6f, 0x70, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x41,
	0x6e, 0x63, 0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65,
	0x74, 0x4e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0x6c, 0x0a, 0x0f,
	0x50, 0x65, 0x72, 0x66, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x32, 0x91, 0x01, 0x0a, 0x09, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2a, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x11, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x11, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x11, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x32, 0x81,
	0x02, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2c, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x09, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x32, 0x3f, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x31, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x32, 0x78, 0x0a, 0x08, 0x53, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x0c, 0x0a,
	0x02, 0x2e, 0x2f, 0x5a, 0x06, 0x2e, 0x2f, 0x3b, 0x51, 0x4e, 0x51, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_qnq_rpc_proto_rawDescOnce sync.Once
	file_qnq_rpc_proto_rawDescData = file_qnq_rpc_proto_rawDesc
)

func file_qnq_rpc_proto_rawDescGZIP() []byte {
	file_qnq_rpc_proto_rawDescOnce.Do(func() {
		file_qnq_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_qnq_rpc_proto_rawDescData)
	})
	return file_qnq_rpc_proto_rawDescData
}

var file_qnq_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_qnq_rpc_proto_goTypes = []interface{}{
	(*IpAgent)(nil),                    // 0: IpAgent
	(*LocalSyncRequest)(nil),           // 1: LocalSyncRequest
	(*Result)(nil),                     // 2: Result
	(*RemoteTargetRequest)(nil),        // 3: RemoteTargetRequest
	(*GetRemoteFileInfoRequest)(nil),   // 4: GetRemoteFileInfoRequest
	(*RemoteSyncRequest)(nil),          // 5: RemoteSyncRequest
	(*FileInfoResult)(nil),             // 6: FileInfoResult
	(*GetTaskRequest)(nil),             // 7: GetTaskRequest
	(*TaskInfoResult)(nil),             // 8: TaskInfoResult
	(*GetSysInfoRequest)(nil),          // 9: GetSysInfoRequest
	(*SysInfoResult)(nil),              // 10: SysInfoResult
	(*GetPerfProbeRequest)(nil),        // 11: GetPerfProbeRequest
	(*PerfProbeResult)(nil),            // 12: PerfProbeResult
	(*FileInfoResult_FileInfo)(nil),    // 13: FileInfoResult.FileInfo
	(*SysInfoResultPartitionStat)(nil), // 14: SysInfoResult.partitionStat
}
var file_qnq_rpc_proto_depIdxs = []int32{
	2,  // 0: FileInfoResult.result:type_name -> Result
	13, // 1: FileInfoResult.fileInfos:type_name -> FileInfoResult.FileInfo
	2,  // 2: TaskInfoResult.result:type_name -> Result
	2,  // 3: SysInfoResult.result:type_name -> Result
	14, // 4: SysInfoResult.partitionStats:type_name -> SysInfoResult.partitionStat
	2,  // 5: PerfProbeResult.result:type_name -> Result
	1,  // 6: LocalSync.SingleSync:input_type -> LocalSyncRequest
	1,  // 7: LocalSync.BatchSync:input_type -> LocalSyncRequest
	1,  // 8: LocalSync.PartitionSync:input_type -> LocalSyncRequest
	3,  // 9: RemoteSync.AddTarget:input_type -> RemoteTargetRequest
	3,  // 10: RemoteSync.DeleteTarget:input_type -> RemoteTargetRequest
	4,  // 11: RemoteSync.GetFileInfo:input_type -> GetRemoteFileInfoRequest
	5,  // 12: RemoteSync.InputSync:input_type -> RemoteSyncRequest
	5,  // 13: RemoteSync.OutputSync:input_type -> RemoteSyncRequest
	7,  // 14: TaskCenter.GetTaskInfo:input_type -> GetTaskRequest
	9,  // 15: SysProbe.GetSysInfo:input_type -> GetSysInfoRequest
	11, // 16: SysProbe.GetPerfProbe:input_type -> GetPerfProbeRequest
	2,  // 17: LocalSync.SingleSync:output_type -> Result
	2,  // 18: LocalSync.BatchSync:output_type -> Result
	2,  // 19: LocalSync.PartitionSync:output_type -> Result
	2,  // 20: RemoteSync.AddTarget:output_type -> Result
	2,  // 21: RemoteSync.DeleteTarget:output_type -> Result
	6,  // 22: RemoteSync.GetFileInfo:output_type -> FileInfoResult
	2,  // 23: RemoteSync.InputSync:output_type -> Result
	2,  // 24: RemoteSync.OutputSync:output_type -> Result
	8,  // 25: TaskCenter.GetTaskInfo:output_type -> TaskInfoResult
	10, // 26: SysProbe.GetSysInfo:output_type -> SysInfoResult
	12, // 27: SysProbe.GetPerfProbe:output_type -> PerfProbeResult
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_qnq_rpc_proto_init() }
func file_qnq_rpc_proto_init() {
	if File_qnq_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qnq_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IpAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemoteFileInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPerfProbeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerfProbeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoResult_FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qnq_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysInfoResultPartitionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qnq_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_qnq_rpc_proto_goTypes,
		DependencyIndexes: file_qnq_rpc_proto_depIdxs,
		MessageInfos:      file_qnq_rpc_proto_msgTypes,
	}.Build()
	File_qnq_rpc_proto = out.File
	file_qnq_rpc_proto_rawDesc = nil
	file_qnq_rpc_proto_goTypes = nil
	file_qnq_rpc_proto_depIdxs = nil
}
